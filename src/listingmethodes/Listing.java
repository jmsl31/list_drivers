/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package listingmethodes;

import java.awt.Dimension;
import java.awt.List;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import org.json.JSONException;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.*;

/**
 *
 * @author meisslj1
 */
public class Listing extends javax.swing.JPanel {

    /**
     * Creates new form Listing
     */
    ListingMethodes driver;
    JSONArray listDriver;
    JSONObject drivername;
    JSONObject drivertype;
    File chemin;
    FileWriter cheminwriter;

    public Listing(ListingMethodes l) throws IOException {
        initComponents();
        driver = l;
        listDriver = new JSONArray();
        drivertype = new JSONObject();

        drivername = new JSONObject();
        JFrame fenetre = new JFrame();

        fenetre.add(this);
        fenetre.setSize(800, 800);
        fenetre.setVisible(true);
        cheminwriter = new FileWriter("D://liste_driver.json");

    }

    void writefile() throws IOException {

        drivername.writeJSONString(cheminwriter);
        cheminwriter.close();
    }

    private void displayPAS(String s) throws IOException, JSONException {

        String[] listefichiers;
        chemin = new File(s);
        int i;
        JSONObject temp = new JSONObject();
        listefichiers = chemin.list();
        for (i = 0; i < listefichiers.length; i++) {
            if (listefichiers[i].endsWith(".pas") == true) {

                jComboBox2.addItem(listefichiers[i]);
                File f = new File(chemin + "\\" + listefichiers[i]);
                BufferedReader reader = new BufferedReader(new FileReader(f));
                temp = driver.readDelphi(reader);

            }

        }
        drivertype.put("Delphi", temp);

    }

    private void displayH(String s) throws FileNotFoundException, IOException, JSONException {
        String[] listefichiers;
        chemin = new File(s);
        int i = 0;
        int compt = 0;
        listefichiers = chemin.list();
        JSONObject t = new JSONObject();
        for (i = 0; i < listefichiers.length; i++) {
            if (listefichiers[i].endsWith(".h") == true) {
                compt++;
                System.out.println("Fichier : " + compt);
                System.out.println("i : " + i);
                if (i == 15) {
                    int toto = 0;
                }

                jComboBox2.addItem(listefichiers[i]);
                File f = new File(chemin + "\\" + listefichiers[i]);
                BufferedReader reader = new BufferedReader(new FileReader(f));
                t = driver.readCPLUS(reader);
                ;
            }

        }
        drivertype.put("CPlus", t);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        OK = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 67, Short.MAX_VALUE)
        );

        jComboBox1.setName("typeList"); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        OK.setText("OK");
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });

        jComboBox2.setName("filelist"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OK))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(OK)))
                .addGap(0, 352, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jComboBox1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed


    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_OKActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OK;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) throws JSONException, IOException {
        // TODO code application logic here
        ListingMethodes file = new ListingMethodes();
        File[] listefichiers;
        Listing project = new Listing(file);

        try {
            // TODO add your handling code here:    
            //   project.displayPAS("D:\\delphi\\vbench\\Drivers\\PowerMeters");
            //   project.displayH("D:\\cpp\\drivers_cpp\\src\\instruments\\powermeters");
            File liste = new File("D:\\delphi\\vbench\\Drivers\\");
            listefichiers = liste.listFiles();
            
            /*      for (int i = 0; i < liste.length(); i++) {
                
                 if (liste.isDirectory())
                 {
                     project.jComboBox1.addItem(listefichiers[i].getAbsolutePath());
                     
                     for (int j = 0; j < listefichiers[i].listFiles().length; j++) {
                         project.jComboBox2.addItem(listefichiers[i].listFiles()[j].getName());
                     }
                     
                 }
            }
             */
            project.displayPAS("D:\\delphi\\vbench\\Drivers\\PowerMeters");
            project.displayH("D:\\cpp\\drivers_cpp\\src\\instruments\\powermeters");

            project.drivername.put("powermeters", project.drivertype);

            project.writefile();

        } catch (IOException ex) {
            Logger.getLogger(Listing.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JSONException ex) {
            Logger.getLogger(Listing.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            project.cheminwriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Listing.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
